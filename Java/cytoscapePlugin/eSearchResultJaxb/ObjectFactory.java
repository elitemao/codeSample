// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.26 at 06:35:42 PM CET 
//

package eSearchResultJaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */


@XmlRegistry
public class ObjectFactory {

    private final static QName _Field_QNAME = new QName("", "Field");
    private final static QName _Count_QNAME = new QName("", "Count");
    private final static QName _RetMax_QNAME = new QName("", "RetMax");
    private final static QName _To_QNAME = new QName("", "To");
    private final static QName _OutputMessage_QNAME = new QName("", "OutputMessage");
    private final static QName _PhraseNotFound_QNAME = new QName("", "PhraseNotFound");
    private final static QName _OP_QNAME = new QName("", "OP");
    private final static QName _Term_QNAME = new QName("", "Term");
    private final static QName _PhraseIgnored_QNAME = new QName("", "PhraseIgnored");
    private final static QName _QueryKey_QNAME = new QName("", "QueryKey");
    private final static QName _QuotedPhraseNotFound_QNAME = new QName("", "QuotedPhraseNotFound");
    private final static QName _RetStart_QNAME = new QName("", "RetStart");
    private final static QName _Explode_QNAME = new QName("", "Explode");
    private final static QName _ERROR_QNAME = new QName("", "ERROR");
    private final static QName _FieldNotFound_QNAME = new QName("", "FieldNotFound");
    private final static QName _Id_QNAME = new QName("", "Id");
    private final static QName _QueryTranslation_QNAME = new QName("", "QueryTranslation");
    private final static QName _WebEnv_QNAME = new QName("", "WebEnv");
    private final static QName _From_QNAME = new QName("", "From");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TermSet }
     * 
     */
    public TermSet createTermSet() {
        return new TermSet();
    }

    /**
     * Create an instance of {@link Translation }
     * 
     */
    public Translation createTranslation() {
        return new Translation();
    }

    /**
     * Create an instance of {@link ESearchResult }
     * 
     */
    public ESearchResult createESearchResult() {
        return new ESearchResult();
    }

    /**
     * Create an instance of {@link TranslationStack }
     * 
     */
    public TranslationStack createTranslationStack() {
        return new TranslationStack();
    }

    /**
     * Create an instance of {@link WarningList }
     * 
     */
    public WarningList createWarningList() {
        return new WarningList();
    }

    /**
     * Create an instance of {@link TranslationSet }
     * 
     */
    public TranslationSet createTranslationSet() {
        return new TranslationSet();
    }

    /**
     * Create an instance of {@link IdList }
     * 
     */
    public IdList createIdList() {
        return new IdList();
    }

    /**
     * Create an instance of {@link ErrorList }
     * 
     */
    public ErrorList createErrorList() {
        return new ErrorList();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Field")
    public JAXBElement<String> createField(String value) {
        return new JAXBElement<String>(_Field_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Count")
    public JAXBElement<String> createCount(String value) {
        return new JAXBElement<String>(_Count_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RetMax")
    public JAXBElement<String> createRetMax(String value) {
        return new JAXBElement<String>(_RetMax_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "To")
    public JAXBElement<String> createTo(String value) {
        return new JAXBElement<String>(_To_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OutputMessage")
    public JAXBElement<String> createOutputMessage(String value) {
        return new JAXBElement<String>(_OutputMessage_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PhraseNotFound")
    public JAXBElement<String> createPhraseNotFound(String value) {
        return new JAXBElement<String>(_PhraseNotFound_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OP")
    public JAXBElement<String> createOP(String value) {
        return new JAXBElement<String>(_OP_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Term")
    public JAXBElement<String> createTerm(String value) {
        return new JAXBElement<String>(_Term_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PhraseIgnored")
    public JAXBElement<String> createPhraseIgnored(String value) {
        return new JAXBElement<String>(_PhraseIgnored_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "QueryKey")
    public JAXBElement<String> createQueryKey(String value) {
        return new JAXBElement<String>(_QueryKey_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "QuotedPhraseNotFound")
    public JAXBElement<String> createQuotedPhraseNotFound(String value) {
        return new JAXBElement<String>(_QuotedPhraseNotFound_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RetStart")
    public JAXBElement<String> createRetStart(String value) {
        return new JAXBElement<String>(_RetStart_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Explode")
    public JAXBElement<String> createExplode(String value) {
        return new JAXBElement<String>(_Explode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ERROR")
    public JAXBElement<String> createERROR(String value) {
        return new JAXBElement<String>(_ERROR_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FieldNotFound")
    public JAXBElement<String> createFieldNotFound(String value) {
        return new JAXBElement<String>(_FieldNotFound_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Id")
    public JAXBElement<String> createId(String value) {
        return new JAXBElement<String>(_Id_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "QueryTranslation")
    public JAXBElement<String> createQueryTranslation(String value) {
        return new JAXBElement<String>(_QueryTranslation_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WebEnv")
    public JAXBElement<String> createWebEnv(String value) {
        return new JAXBElement<String>(_WebEnv_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "From")
    public JAXBElement<String> createFrom(String value) {
        return new JAXBElement<String>(_From_QNAME, String.class, null, value);
    }

}
